---
- name: Deploy Atlantis ECS Cluster with CloudFormation
  hosts: localhost
  gather_facts: no
  environment:
    AWS_DEFAULT_REGION: us-east-1

  tasks:
    - name: include environment specific variables
      include_vars:
        file: "{{ lookup('env', 'ENV') }}.yml"

    - name: Create DNS-related CloudFormation stack
      cloudformation:
        stack_name: Atlantis-Server-DNS-Stack
        state: present
        disable_rollback: false
        template: stacks/Atlantis-server-dns.yml
        template_parameters:
          PublicSubnetA: "{{ PublicSubnetA }}"
          PublicSubnetB: "{{ PublicSubnetB }}"
          PublicSubnetC: "{{ PublicSubnetC }}"
          DefaultVPCId: "{{ DefaultVPCId }}"
          LBSecurityGroup: "{{ LBSecurityGroup }}"
          Env: "{{ lookup('env', 'ENV') }}"
        tags:
          Environment: Dev
          Application: Atlantis-server
      register: stack_atlantis_server_dns
    - debug:
        msg: "{{stack_atlantis_server_dns.stack_outputs}}"

    - name: Create Atlantis Server ECS CloudFormation stack
      cloudformation:
        stack_name: Atlantis-Server-ECS-Stack
        state: present
        disable_rollback: false
        template: stacks/atlantis-server-ecs.yml
        template_parameters:
          SecurityGroup: "{{ SecurityGroup }}"
          PrivateSubnetA: "{{ PrivateSubnetA }}"
          PrivateSubnetB: "{{ PrivateSubnetB }}"
          PrivateSubnetC: "{{ PrivateSubnetC }}"
          AtlantisServerTargetGroupArn: "{{ stack_atlantis_server_dns.stack_outputs.LoadBalancerTargetGroupArn }}"
          AtlantisServerLoadBalancerDNSName: "{{ stack_atlantis_server_dns.stack_outputs.LoadBalancerDNSName }}"
          Env: "{{ lookup('env', 'ENV') }}"
        tags:
          Environment: Dev
          Application: Atlantis-server
      register: stack_atlantis_server_ecs
    - debug:
        msg: "{{stack_atlantis_server_ecs.stack_outputs}}"
        
